name: test

on:
  push:
    branches: main
    paths:
      - "!*.md"
      - .github/workflows/ci.yml
      - "bin/**"
      - "!docs/**"
      - "test/**"
      - .eslintrc.json
      - package.json
      - pnpm-lock.yaml
      - scripts.ts
      - tsconfig.base.json
      - tsconfig.json
      - tsconfig.prebuild.json
  pull_request:
    branches: main
    paths:
      - "!*.md"
      - .github/workflows/ci.yml
      - "bin/**"
      - "!docs/**"
      - "test/**"
      - .eslintrc.json
      - package.json
      - pnpm-lock.yaml
      - scripts.ts
      - tsconfig.base.json
      - tsconfig.json
      - tsconfig.prebuild.json

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: "https://npm.pkg.github.com"
          scope: "@vanyauhalin"
      - run: npm i -g pnpm
      - run: pnpm i
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: pnpm build
      - run: pnpm lint
      - run: pnpm test
  test:
    name: v${{ matrix.nodejs }}, ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: [lint]
    timeout-minutes: 3
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        nodejs: [10, 12, 14]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14
          registry-url: "https://npm.pkg.github.com"
          scope: "@vanyauhalin"
      - run: npm i -g pnpm
      - run: pnpm i
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: pnpm build-ci
      - if: matrix.os == 'ubuntu-latest'|| matrix.os == 'macOS-latest'
        run: |
          rm -rf node_modules
          brew install fnm
          eval "$(fnm env)"
      - if: matrix.os == 'windows-latest'
        run: |
          rm -r -fo node_modules
          choco install fnm
          fnm env | iex
      - run: |
          echo ${{ matrix.nodejs }} > .node-version
          fnm install
          fnm use
          npm i
          npm run ci
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
